<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.notive.myapp.mapper.UserMgtMapper">

    <!-- ==================== 회원 목록 조회 ==================== -->

	<select id="selectUserList" resultType="org.notive.myapp.domain.UserListVO">
		
        <![CDATA[ 
            SELECT 
            /*+ index_asc(tbl_user) */
                u.user_id, 
                u.user_name, 
                u.user_bday, 
                u.user_signup_date, 
                u.user_grade, 
                u.user_state
            FROM tbl_user u            
        ]]>
		
	</select>

    <!-- ==================== 회원 목록 페이지조회 ==================== -->

    <select id="selectUserListWithPaging" resultType="org.notive.myapp.domain.UserListVO">

        SELECT
        /*+ index_asc(tbl_user) */
            u.user_id, 
            u.user_name, 
            u.user_bday, 
            u.user_signup_date, 
            u.user_grade, 
            CASE
                WHEN u.user_state = 1 THEN s.user_state_code
                WHEN u.user_state = 2 THEN s.user_state_code
            END
        FROM
            tbl_user u INNER JOIN tbl_state_code s
        ON( u.user_state = s.user_state )   
        
        <where>
            <choose>
                <when test="type == 'N'.toString()">
                    user_name LIKE '%'||#{keyword}||'%'
                </when>

                <when test="type == 'I'.toString()">
                    user_id LIKE '%'||#{keyword}||'%'
                </when>

                <when test="type == 'G'.toString()">
                    user_grade LIKE '%'||#{keyword}||'%'
                </when>

                <when test="type == 'S'.toString()">
                    user_state_code IN #{keyword}
                </when>
            </choose>
        </where>

        OFFSET ( #{currPage} - 1 ) * #{amount} ROWS
        FETCH NEXT #{amount} ROWS ONLY

    </select>


    <!-- ==================== 특정회원 상세 조회 ==================== -->


	
    <select id="selectUser" resultType="org.notive.myapp.domain.UserGetVO">

        <![CDATA[         
            SELECT 
			    u.user_id,
			    u.user_name,
			    u.user_bday,
			    u.user_signup_date,
			    CASE
				    WHEN u.user_grade = 1 THEN g.user_grade_desc
				    WHEN u.user_grade = 2 THEN g.user_grade_desc
				    WHEN u.user_grade = 3 THEN g.user_grade_desc
				END,
				CASE
                    WHEN u.user_state = 1 THEN s.user_state_code
                    WHEN u.user_state = 2 THEN s.user_state_code
                END
			FROM tbl_user u INNER JOIN tbl_user_grade_code g
			ON (u.user_grade = g.user_grade)
			INNER JOIN tbl_state_code s
            ON (u.user_state = s.user_state)
			WHERE u.user_id = #{user_id}
        ]]>
        
    </select>

    <!-- ==================== 관리내역 조회 ==================== -->

    <select id="selectReply" resultType="org.notive.myapp.domain.UserMgtCmtVO">
        SELECT
            m.user_id,
            m.admin_id,
            CASE
                WHEN m.user_mgt_code = 1 THEN c.user_mgt_codename
                WHEN m.user_mgt_code = 2 THEN c.user_mgt_codename
                WHEN m.user_mgt_code = 3 THEN c.user_mgt_codename
            END,
            m.user_mgt_comment,
            m.user_mgt_date
        FROM
            tbl_user_management m INNER JOIN tbl_management_code c
        ON m.user_mgt_code = c.user_mgt_code
        WHERE user_id = #{user_id}
    </select>

    <!-- ==================== 관리 내역 등록 ==================== -->

    <insert id="mgtCmtInsert">
        INSERT INTO tbl_user_management (user_id, admin_id, user_mgt_code, user_mgt_comment, user_mgt_date) 
		VALUES (#{userID}, #{adminID} ,#{userMgtCode}, #{userMgtCmt}, sysdate)
    </insert>
    

    <!-- ==================== 목록 토탈 ==================== -->

    <select id="selectTotalCount" resultType="int">

        SELECT count(user_id)
        FROM tbl_user        

    </select>

    <!-- ========================= 회원 상태 변경 ======================== -->

    
    <update id="userStateUpdate">

        UPDATE tbl_user
           SET
                <choose>
                    <when test="userState == 1">
                        user_state = 1
                    </when>
                    <when test="userState == 2">
                        user_state = 2
                    </when>                    
                </choose>
                ,
                <choose>
                    <when test="userGrade == 1">
                        user_grade = 1
                    </when>
                    <when test="userGrade == 2">
                        user_grade = 2
                    </when>
                    <when test="userGrade == 3">
                        user_grade = 3
                    </when>
                </choose>
         WHERE user_id = #{userID}

    </update>


    <select id="selectUserListWithPagingSort" resultType="org.notive.myapp.domain.UserListVO">

        SELECT
            u.user_id, 
            u.user_name, 
            u.user_bday, 
            u.user_signup_date,
            CASE
                WHEN u.user_grade = 1 THEN g.user_grade_desc
                WHEN u.user_grade = 2 THEN g.user_grade_desc
                WHEN u.user_grade = 3 THEN g.user_grade_desc
            END,
            CASE
                WHEN u.user_state = 1 THEN s.user_state_code
                WHEN u.user_state = 2 THEN s.user_state_code
            END            
        FROM
            tbl_user u INNER JOIN tbl_state_code s
        ON( u.user_state = s.user_state ) 
        INNER JOIN tbl_user_grade_code g
        ON ( u.user_grade = g.user_grade)
        
        <where>
            <choose>
                <when test="searchType == 'N'.toString()">
                    user_name LIKE '%'||#{keyword}||'%'
                </when>

                <when test="searchType == 'I'.toString()">
                    user_id LIKE '%'||#{keyword}||'%'
                </when>

                <when test="searchType == 'G'.toString()">
                    user_grade LIKE '%'||#{keyword}||'%'
                </when>

                <when test="searchType == 'S'.toString()">
                    user_state_code IN #{keyword}
                </when>
            </choose>
        </where>

        <choose>
            <when test="sortType == 'idSortU'.toString()">ORDER BY user_id ASC</when>
            <when test="sortType == 'idSortD'.toString()">ORDER BY user_id DESC</when>
            <when test="sortType == 'nameSortU'.toString()">ORDER BY user_name ASC</when>
            <when test="sortType == 'nameSortD'.toString()">ORDER BY user_name DESC</when>
        </choose>

        <choose>
            <when test="sortType == 'display15'.toString()">
                OFFSET ( #{currPage} - 1 ) * (#{amount} + 5) ROWS
                FETCH NEXT (#{amount} + 5) ROWS ONLY
            </when>
            <when test="sortType == 'display20'.toString()">
                OFFSET ( #{currPage} - 1 ) * 20 ROWS
                FETCH NEXT 20 ROWS ONLY
            </when>
            <when test="sortType == 'display30'.toString()">
                OFFSET ( #{currPage} - 1 ) * 30 ROWS
                FETCH NEXT 30 ROWS ONLY
            </when>
            <otherwise>
                OFFSET ( #{currPage} - 1 ) * #{amount} ROWS
                FETCH NEXT #{amount} ROWS ONLY

            </otherwise>
        </choose>

        

    </select>

    
    
    
</mapper>
